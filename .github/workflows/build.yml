name: Build
on:
  workflow_dispatch: 
    inputs: 
      ref:
        required: true
        default: HEAD
        description: the ref of ffmpeg repositroy. 
jobs:
  pre:
    runs-on: ubuntu-latest
    outputs: 
      version: ${{ steps.main.outputs.version }}
      hash: ${{ steps.main.outputs.hash }}
    steps:
      - uses: actions/checkout@v2
      - uses: anatawa12/something-releaser@v2
      - id: main
        env:
          GH_TOKEN: ${{ github.token }}
          REF: ${{ github.event.inputs.ref }}
        run: |-
          mkdir ffmpeg
          pushd ffmpeg
            git config remote.origin.url https://git.ffmpeg.org/ffmpeg.git
            git fetch origin "$REF"
            hash="$(git rev-parse FETCH_HEAD)"
          popd
          date="$(date +%Y-%m-%d-%H-%M-%S)"
          version="$hash-$date"

          git tag "$version"
          git push origin "$version"
          gh release create "$version" --notes "The relesase for $REF"

          gh-set-output version "$version"
          gh-set-output hash "$hash"
  
  build:
    needs: [pre]
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            runs-on: ubuntu-latest
            shell: bash
          - target: aarch64-unknown-linux-musl
            runs-on: ubuntu-latest
            shell: bash
          - target: x86_64-pc-windows-msvc
            runs-on: windows-latest
            arch: amd64
            shell: msys2 {0}
          - target: aarch64-pc-windows-msvc
            runs-on: windows-latest
            arch: amd64_arm64
            shell: msys2 {0}
          - target: x86_64-apple-darwin
            runs-on: macos-11
            shell: bash
          - target: aarch64-apple-darwin
            runs-on: macos-11
            shell: bash
    runs-on: ${{ matrix.runs-on }}
    defaults:
      run:
        shell: ${{ matrix.shell }}
    steps:
      - uses: actions/checkout@v2
      - uses: anatawa12/something-releaser@v2
      - uses: ilammy/msvc-dev-cmd@v1
        if: ${{ matrix.runs-on == 'windows-latest' }}
        with:
          arch: ${{ matrix.arch }}
      - uses: msys2/setup-msys2@v2
        if: ${{ matrix.runs-on == 'windows-latest' }}
        with:
          path-type: inherit

      - name: Install deps
        env:
          target: ${{ matrix.target }}
        run: |
          ./install_deps.sh "$target"

      - name: Clone
        env:
          hash: ${{ needs.pre.outputs.hash }}
        run: ./clone.sh $hash

      - name: Configure
        env:
          target: ${{ matrix.target }}
          GH_TOKEN: ${{ github.token }}
        run: |
          BUILT="$(pwd)/built"
          targz="$(pwd)/built-$target.tar.gz"
          configure="$(pwd)/configure.sh"
          echo "BUILT=$BUILT" >> $GITHUB_ENV
          echo "targz=$targz" >> $GITHUB_ENV

          pushd ffmpeg
            "$configure" "$target" "$BUILT"
          popd

      - name: Build
        run: |
          pushd ffmpeg
            make
            make install
          popd

      - name: Release
        env:
          version: ${{ needs.pre.outputs.version }}
          GH_TOKEN: ${{ github.token }}
        run: |
          pushd "$BUILT"
            tar czf "$targz" .
          popd
          gh release upload "$version" "$targz"

      - uses: actions/upload-artifact@v2
        if: failure()
        with: 
          name: build-log-${{ matrix.target }}
          path: ffmpeg/ffbuild/config.log
